{"ast":null,"code":"var _jsxFileName = \"/Users/lorennav/Documents/Diana/Web Apps Diana/FoodyMealplanner/FoodyMealplanner/src/MealPlanner.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport BreakfastCard from \"./RecipeCard\";\nimport \"./MealPlanner.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_ID = \"669ffd56\";\nconst API_KEY = \"99bbd34468d8bd690f225c2ec33741af\"; // We have to display 7 breakfasts, 7 lunches and 7 dinners;\n// Each of this 7 meals have to change the recipe and order when reset:\n// ex:          [banana, apple, orange, durian, kiwi, cherry, lemon] -> then Reset ->\n//               [ apple, kiwi, banana, orange, lemon, cherry, durian] -> but are we going to show only 7 recipes? Well we can get more\n//                                                                        elements from the API and then splice after with 7:\n//              1ยบ get 20 recipes\n//              2ยบ Shuffle the 20 recipes\n//              3ยบ Get the first 7 recipes from that shuffled array\n// Function to shuffle arrays\n\nfunction shuffleArray(array) {\n  let i = array.length - 1;\n\n  for (; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n\n  return array;\n}\n\nclass MealPlan extends Component {\n  //default meal plan\n  constructor() {\n    super();\n    this.state = {\n      breakfast: [],\n      diet: \"balanced\",\n      mealType: \"breakfast\",\n      numberMeals: \"30\"\n    };\n  } //Fetch API with balanced diet recipes\n\n\n  componentDidMount() {\n    axios.get(`https://api.edamam.com/search?app_id=${API_ID}&app_key=${API_KEY}&q=&diet=${this.state.diet}&mealType=breakfast&from=0&to=${this.state.numberMeals}`).then(res => {\n      console.log(res);\n      this.setState({\n        breakfast: res.data.hits\n      });\n    });\n  } //displaying recipes per MEAL\n\n\n  render() {\n    const {\n      breakfast\n    } = this.state;\n    const shuffleRecipeList = shuffleArray(breakfast); //Since we are display the recipe array elements, i shuffled the array to not show always the same order\n\n    const finalNumber = shuffleRecipeList.slice(0, 7); // I asked for 20 recipes and I only want to display 7\n\n    const recipeList = breakfast.length ? finalNumber.map(recipe => {\n      return /*#__PURE__*/_jsxDEV(BreakfastCard, {\n        image: recipe.recipe.image,\n        name: recipe.recipe.label,\n        link: recipe.recipe.url,\n        ingredients: recipe.recipe.ingredientLines\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Meals are cooking...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Meal Planner Happiness\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mealtypes\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Meals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Breakfast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Lunch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Dinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plan_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"days\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Monday\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Monday\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Tuesday\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Wednesday\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" Thursday\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Friday\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Saturday\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Sunday\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meals\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"breakfast\",\n            children: recipeList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"lunch\",\n            children: recipeList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"dinner\",\n            children: recipeList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MealPlan;","map":{"version":3,"sources":["/Users/lorennav/Documents/Diana/Web Apps Diana/FoodyMealplanner/FoodyMealplanner/src/MealPlanner.js"],"names":["React","Component","axios","BreakfastCard","API_ID","API_KEY","shuffleArray","array","i","length","j","Math","floor","random","temp","MealPlan","constructor","state","breakfast","diet","mealType","numberMeals","componentDidMount","get","then","res","console","log","setState","data","hits","render","shuffleRecipeList","finalNumber","slice","recipeList","map","recipe","image","label","url","ingredientLines"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport BreakfastCard from \"./RecipeCard\";\nimport \"./MealPlanner.css\";\n\nconst API_ID = \"669ffd56\";\nconst API_KEY = \"99bbd34468d8bd690f225c2ec33741af\";\n\n// We have to display 7 breakfasts, 7 lunches and 7 dinners;\n// Each of this 7 meals have to change the recipe and order when reset:\n// ex:          [banana, apple, orange, durian, kiwi, cherry, lemon] -> then Reset ->\n//               [ apple, kiwi, banana, orange, lemon, cherry, durian] -> but are we going to show only 7 recipes? Well we can get more\n//                                                                        elements from the API and then splice after with 7:\n//              1ยบ get 20 recipes\n//              2ยบ Shuffle the 20 recipes\n//              3ยบ Get the first 7 recipes from that shuffled array\n\n// Function to shuffle arrays\nfunction shuffleArray(array) {\n  let i = array.length - 1;\n  for (; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n}\n\nclass MealPlan extends Component {\n  //default meal plan\n  constructor() {\n    super();\n    this.state = {\n      breakfast: [],\n      diet: \"balanced\",\n      mealType: \"breakfast\",\n      numberMeals: \"30\",\n    };\n  }\n\n  //Fetch API with balanced diet recipes\n  componentDidMount() {\n    axios\n      .get(\n        `https://api.edamam.com/search?app_id=${API_ID}&app_key=${API_KEY}&q=&diet=${this.state.diet}&mealType=breakfast&from=0&to=${this.state.numberMeals}`\n      )\n      .then((res) => {\n        console.log(res);\n        this.setState({\n          breakfast: res.data.hits,\n        });\n      });\n  }\n\n  //displaying recipes per MEAL\n  render() {\n    const { breakfast } = this.state;\n    const shuffleRecipeList = shuffleArray(breakfast); //Since we are display the recipe array elements, i shuffled the array to not show always the same order\n    const finalNumber = shuffleRecipeList.slice(0, 7); // I asked for 20 recipes and I only want to display 7\n    const recipeList = breakfast.length ? (\n      finalNumber.map((recipe) => {\n        return (\n          <BreakfastCard\n            image={recipe.recipe.image}\n            name={recipe.recipe.label}\n            link={recipe.recipe.url}\n            ingredients={recipe.recipe.ingredientLines}\n          />\n        );\n      })\n    ) : (\n      <div>\n        {\" \"}\n        <p>Meals are cooking...</p>{\" \"}\n      </div>\n    );\n    return (\n      <div>\n        <h1>Meal Planner Happiness</h1>\n        <div className=\"mealtypes\">\n          {\" \"}\n          <h2>Meals</h2>\n          <h2>Breakfast</h2>\n          <h2>Lunch</h2>\n          <h2>Dinner</h2>\n        </div>\n        <div className=\"plan_container\">\n          <div className=\"days\">\n            <h2>Monday</h2>\n            <h2>Monday</h2>\n            <h2>Tuesday</h2>\n            <h2>Wednesday</h2>\n            <h2> Thursday</h2>\n            <h2>Friday</h2>\n            <h2>Saturday</h2>\n            <h2>Sunday</h2>\n          </div>\n          <div className=\"meals\">\n            <div id=\"breakfast\">{recipeList}</div>\n            <div id=\"lunch\">{recipeList}</div>\n            <div id=\"dinner\">{recipeList}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MealPlan;\n"]},"metadata":{},"sourceType":"module"}