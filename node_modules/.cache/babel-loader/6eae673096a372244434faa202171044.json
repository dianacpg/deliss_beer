{"ast":null,"code":"var _jsxFileName = \"/Users/lorennav/Documents/Diana/Web Apps Diana/Deliss/src/components/MealPlanner.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Filter from \"./Filter\";\nimport MealList from \"./MealList\";\nimport \"../styles/MealPlanner.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_ID = process.env.REACT_APP_EDAMAM_API_ID;\nconst API_KEY = process.env.REACT_APP_EDAMAM_API_KEY; // We will display a weekly meal planner with breakfast, lunch and dinner.\n//We will get the recipes on the edamame API\n\nconst MealPlanner = ({\n  user\n}) => {\n  _s();\n\n  const [breakfast, setBreakfast] = useState(null);\n  const [lunch, setLunch] = useState(null);\n  const [dinner, setDinner] = useState(null);\n  const [diet, setDiet] = useState(\"\"); //by default the diet will be standard\n\n  const URL = `https://api.edamam.com/search?app_id=${API_ID}&app_key=${API_KEY}q=&health=${diet}&from=0&to=30&`;\n  useEffect(() => {\n    axios.get(URL + `mealType=breakfast`).then(res => {\n      setBreakfast(res.data.hits);\n      console.log(res);\n    }).catch(console.log);\n  }, [diet]);\n  useEffect(() => {\n    axios.get(URL + `dishType=main&mealType=lunch`).then(res => {\n      setLunch(res.data.hits);\n      console.log(diet);\n    }).catch(console.log);\n  }, [diet]);\n  useEffect(() => {\n    axios.get(URL + `dishType=main&mealType=dinner`).then(res => {\n      setDinner(res.data.hits);\n      console.log(diet);\n    }).catch(console.log);\n  }, [diet]); //it will only render if the user filters the diet type\n\n  const onFilterChange = e => {\n    setDiet(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"plan_container\",\n    children: [/*#__PURE__*/_jsxDEV(Filter //Added a filter option for standard, vegetarian and vegan\n    , {\n      onFilterChange: onFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Breakfast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"breakfast\",\n      children: breakfast && /*#__PURE__*/_jsxDEV(MealList, {\n        props: breakfast,\n        diet: diet,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lunch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"lunch\",\n      children: lunch && /*#__PURE__*/_jsxDEV(MealList, {\n        props: lunch,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"dinner\",\n      children: dinner && /*#__PURE__*/_jsxDEV(MealList, {\n        props: dinner,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 35\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MealPlanner, \"xa9zxhwZQHr48LjN4orKiBhV5JE=\");\n\n_c = MealPlanner;\nexport default MealPlanner; //\n\nvar _c;\n\n$RefreshReg$(_c, \"MealPlanner\");","map":{"version":3,"sources":["/Users/lorennav/Documents/Diana/Web Apps Diana/Deliss/src/components/MealPlanner.js"],"names":["React","useState","useEffect","axios","Filter","MealList","API_ID","process","env","REACT_APP_EDAMAM_API_ID","API_KEY","REACT_APP_EDAMAM_API_KEY","MealPlanner","user","breakfast","setBreakfast","lunch","setLunch","dinner","setDinner","diet","setDiet","URL","get","then","res","data","hits","console","log","catch","onFilterChange","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Filter from \"./Filter\";\nimport MealList from \"./MealList\";\nimport \"../styles/MealPlanner.css\";\n\nconst API_ID = process.env.REACT_APP_EDAMAM_API_ID;\nconst API_KEY = process.env.REACT_APP_EDAMAM_API_KEY;\n\n// We will display a weekly meal planner with breakfast, lunch and dinner.\n//We will get the recipes on the edamame API\nconst MealPlanner = ({ user }) => {\n  const [breakfast, setBreakfast] = useState(null);\n  const [lunch, setLunch] = useState(null);\n  const [dinner, setDinner] = useState(null);\n  const [diet, setDiet] = useState(\"\"); //by default the diet will be standard\n\n  const URL = `https://api.edamam.com/search?app_id=${API_ID}&app_key=${API_KEY}q=&health=${diet}&from=0&to=30&`;\n\n  useEffect(() => {\n    axios\n      .get(URL + `mealType=breakfast`)\n      .then((res) => {\n        setBreakfast(res.data.hits);\n        console.log(res);\n      })\n      .catch(console.log);\n  }, [diet]);\n\n  useEffect(() => {\n    axios\n      .get(URL + `dishType=main&mealType=lunch`)\n      .then((res) => {\n        setLunch(res.data.hits);\n        console.log(diet);\n      })\n      .catch(console.log);\n  }, [diet]);\n\n  useEffect(() => {\n    axios\n      .get(URL + `dishType=main&mealType=dinner`)\n      .then((res) => {\n        setDinner(res.data.hits);\n        console.log(diet);\n      })\n      .catch(console.log);\n  }, [diet]); //it will only render if the user filters the diet type\n\n  const onFilterChange = (e) => {\n    setDiet(e.target.value);\n  };\n\n  return (\n    <div className=\"plan_container\">\n      <Filter //Added a filter option for standard, vegetarian and vegan\n        onFilterChange={onFilterChange}\n      />\n\n      <h2>Breakfast</h2>\n      <div id=\"breakfast\">\n        {/* Recipes will be displayed by the MealList component, passing breakfast,lunch and dinner arrays as props */}\n        {/* Conditional Rendering.Only output MealList when we have a value for breakfast. */}\n        {breakfast && <MealList props={breakfast} diet={diet} user={user} />}\n      </div>\n      <h2>Lunch</h2>\n      <div id=\"lunch\">{lunch && <MealList props={lunch} user={user} />}</div>\n      <h2>Dinner</h2>\n      <div id=\"dinner\">{dinner && <MealList props={dinner} user={user} />}</div>\n    </div>\n  );\n};\n\nexport default MealPlanner;\n\n//\n"]},"metadata":{},"sourceType":"module"}