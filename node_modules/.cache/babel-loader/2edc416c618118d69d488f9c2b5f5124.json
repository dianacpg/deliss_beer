{"ast":null,"code":"var _jsxFileName = \"/Users/lorennav/Documents/Diana/Web Apps Diana/DelissBeer/src/components/BeerList.js\";\nimport CardBeer from \"./CardBeer\";\nimport \"../styles/BeerList.css\"; //Function the shuffle arrays\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction shuffleArray(array) {\n  let i = array.length - 1;\n\n  for (; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n\n  return array;\n} //We got the beer arrays for each compatible food, but we need to shuffle the array in order to not to show the same beer order.\n// If we get only 4 beers for each food, we will not have diversity. So we can get 50 beers and then slice to display only 4\n// We will map each array and create a beer card for each beer\n\n\nconst BeerList = ({\n  props,\n  user\n}) => {\n  props.map(beer => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CardBeer, {\n        image: beer.image_url,\n        name: beer.name,\n        description: beer.tagline // ingredients={recipe.recipe.ingredientLines}\n        ,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, beer.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"beerlist\",\n    children: finalBeerList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n};\n\n_c = BeerList;\nexport default BeerList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BeerList\");","map":{"version":3,"sources":["/Users/lorennav/Documents/Diana/Web Apps Diana/DelissBeer/src/components/BeerList.js"],"names":["CardBeer","shuffleArray","array","i","length","j","Math","floor","random","temp","BeerList","props","user","map","beer","image_url","name","tagline","finalBeerList"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAO,wBAAP,C,CAEA;;;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,MAAIC,CAAC,GAAGD,KAAK,CAACE,MAAN,GAAe,CAAvB;;AACA,SAAOD,CAAC,GAAG,CAAX,EAAcA,CAAC,EAAf,EAAmB;AACjB,UAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAV;AACA,UAAMM,IAAI,GAAGP,KAAK,CAACC,CAAD,CAAlB;AACAD,IAAAA,KAAK,CAACC,CAAD,CAAL,GAAWD,KAAK,CAACG,CAAD,CAAhB;AACAH,IAAAA,KAAK,CAACG,CAAD,CAAL,GAAWI,IAAX;AACD;;AACD,SAAOP,KAAP;AACD,C,CAED;AACA;AACA;;;AACA,MAAMQ,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAqB;AACpCD,EAAAA,KAAK,CAACE,GAAN,CAAWC,IAAD,IAAU;AAClB,wBACE;AAAA,6BACE,QAAC,QAAD;AACE,QAAA,KAAK,EAAEA,IAAI,CAACC,SADd;AAEE,QAAA,IAAI,EAAED,IAAI,CAACE,IAFb;AAGE,QAAA,WAAW,EAAEF,IAAI,CAACG,OAHpB,CAIE;AAJF;AAKE,QAAA,IAAI,EAAEL;AALR;AAAA;AAAA;AAAA;AAAA;AADF,OAAUE,IAAI,CAACE,IAAf;AAAA;AAAA;AAAA;AAAA,YADF;AAWD,GAZD;AAaA,sBAAO;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,cAA2BE;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAfD;;KAAMR,Q;AAiBN,eAAeA,QAAf","sourcesContent":["import CardBeer from \"./CardBeer\";\nimport \"../styles/BeerList.css\";\n\n//Function the shuffle arrays\nfunction shuffleArray(array) {\n  let i = array.length - 1;\n  for (; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n}\n\n//We got the beer arrays for each compatible food, but we need to shuffle the array in order to not to show the same beer order.\n// If we get only 4 beers for each food, we will not have diversity. So we can get 50 beers and then slice to display only 4\n// We will map each array and create a beer card for each beer\nconst BeerList = ({ props, user }) => {\n  props.map((beer) => {\n    return (\n      <div key={beer.name}>\n        <CardBeer\n          image={beer.image_url}\n          name={beer.name}\n          description={beer.tagline}\n          // ingredients={recipe.recipe.ingredientLines}\n          user={user}\n        />\n      </div>\n    );\n  });\n  return <div className=\"beerlist\">{finalBeerList}</div>;\n};\n\nexport default BeerList;\n"]},"metadata":{},"sourceType":"module"}