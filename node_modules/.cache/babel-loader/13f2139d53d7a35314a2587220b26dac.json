{"ast":null,"code":"var _jsxFileName = \"/Users/lorennav/Documents/Diana/Web Apps Diana/DelissBeer/src/components/MealPlanner.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Filter from \"./Filter\";\nimport MealList from \"./MealList\";\nimport \"../styles/MealPlanner.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_ID = process.env.REACT_APP_EDAMAM_API_ID;\nconst API_KEY = process.env.REACT_APP_EDAMAM_API_KEY; // We will display a weekly meal planner with breakfast, lunch and dinner.\n//We will get the recipes on the edamame API\n\nconst MealPlanner = ({\n  user\n}) => {\n  _s();\n\n  const [meat, setMeat] = useState(null);\n  const [fish, setFish] = useState(null);\n  const [veggies, setVeggies] = useState(null);\n  const [alcohol, setAlcohol] = useState(\"\"); //by default the diet will be standard\n\n  const URL = `https://api.punkapi.com/v2/beers?${alcohol}&`;\n  useEffect(() => {\n    axios.get(URL + `food=chicken`).then(res => {\n      setMeat(res.data);\n      console.log(res.data);\n    }).catch(console.log);\n  }, [alcohol]);\n  useEffect(() => {\n    axios.get(URL + `food=fish`).then(res => {\n      setFish(res.data);\n      console.log(res.data);\n    }).catch(console.log);\n  }, [alcohol]);\n  useEffect(() => {\n    axios.get(URL + `food=vegetables`).then(res => {\n      setVeggies(res.data);\n      console.log(res.data);\n    }).catch(console.log);\n  }, [alcohol]); //it will only render if the user filters the diet type\n\n  const onFilterChange = e => {\n    setAlcohol(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"plan_container\",\n    children: [/*#__PURE__*/_jsxDEV(Filter //Added a filter option for standard, vegetarian and vegan\n    , {\n      onFilterChange: onFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Meat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"breakfast\",\n      children: meat && /*#__PURE__*/_jsxDEV(MealList, {\n        props: meat,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Fish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"lunch\",\n      children: fish && /*#__PURE__*/_jsxDEV(MealList, {\n        props: fish,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Veggies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"dinner\",\n      children: veggies && /*#__PURE__*/_jsxDEV(MealList, {\n        props: veggies,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MealPlanner, \"SJUKyOI846PjtUwc+v/qpxBUGlI=\");\n\n_c = MealPlanner;\nexport default MealPlanner; //\n\nvar _c;\n\n$RefreshReg$(_c, \"MealPlanner\");","map":{"version":3,"sources":["/Users/lorennav/Documents/Diana/Web Apps Diana/DelissBeer/src/components/MealPlanner.js"],"names":["React","useState","useEffect","axios","Filter","MealList","API_ID","process","env","REACT_APP_EDAMAM_API_ID","API_KEY","REACT_APP_EDAMAM_API_KEY","MealPlanner","user","meat","setMeat","fish","setFish","veggies","setVeggies","alcohol","setAlcohol","URL","get","then","res","data","console","log","catch","onFilterChange","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Filter from \"./Filter\";\nimport MealList from \"./MealList\";\nimport \"../styles/MealPlanner.css\";\n\nconst API_ID = process.env.REACT_APP_EDAMAM_API_ID;\nconst API_KEY = process.env.REACT_APP_EDAMAM_API_KEY;\n\n// We will display a weekly meal planner with breakfast, lunch and dinner.\n//We will get the recipes on the edamame API\nconst MealPlanner = ({ user }) => {\n  const [meat, setMeat] = useState(null);\n  const [fish, setFish] = useState(null);\n  const [veggies, setVeggies] = useState(null);\n  const [alcohol, setAlcohol] = useState(\"\"); //by default the diet will be standard\n\n  const URL = `https://api.punkapi.com/v2/beers?${alcohol}&`;\n\n  useEffect(() => {\n    axios\n      .get(URL + `food=chicken`)\n      .then((res) => {\n        setMeat(res.data);\n        console.log(res.data);\n      })\n      .catch(console.log);\n  }, [alcohol]);\n\n  useEffect(() => {\n    axios\n      .get(URL + `food=fish`)\n      .then((res) => {\n        setFish(res.data);\n        console.log(res.data);\n      })\n      .catch(console.log);\n  }, [alcohol]);\n\n  useEffect(() => {\n    axios\n      .get(URL + `food=vegetables`)\n      .then((res) => {\n        setVeggies(res.data);\n        console.log(res.data);\n      })\n      .catch(console.log);\n  }, [alcohol]); //it will only render if the user filters the diet type\n\n  const onFilterChange = (e) => {\n    setAlcohol(e.target.value);\n  };\n\n  return (\n    <div className=\"plan_container\">\n      <Filter //Added a filter option for standard, vegetarian and vegan\n        onFilterChange={onFilterChange}\n      />\n\n      <h2>Meat</h2>\n      <div id=\"breakfast\">\n        {/* Recipes will be displayed by the MealList component, passing breakfast,lunch and dinner arrays as props */}\n        {/* Conditional Rendering.Only output MealList when we have a value for breakfast. */}\n        {meat && <MealList props={meat} user={user} />}\n      </div>\n      <h2>Fish</h2>\n      <div id=\"lunch\">{fish && <MealList props={fish} user={user} />}</div>\n      <h2>Veggies</h2>\n      <div id=\"dinner\">\n        {veggies && <MealList props={veggies} user={user} />}\n      </div>\n    </div>\n  );\n};\n\nexport default MealPlanner;\n\n//\n"]},"metadata":{},"sourceType":"module"}