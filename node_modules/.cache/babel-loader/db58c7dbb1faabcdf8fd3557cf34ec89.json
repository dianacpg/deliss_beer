{"ast":null,"code":"var _jsxFileName = \"/Users/lorennav/Documents/Diana/Web Apps Diana/FoodyMealplanner_TechLabs/src/pages/Signin.js\",\n    _s = $RefreshSig$();\n\nimport SigninForm from \"../components/SigninForm\";\nimport RegisterForm from \"../components/SigninForm\";\nimport MealPlanner from \"./MealPlanner\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signin = () => {\n  _s();\n\n  const [route, setRoute] = useState(\"signin\"); // The authentification will be determine by the route state.\n  // Signin means that the user has to sign in.\n\n  const onRouteChange = route => {\n    setRoute(route);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: route === \"home\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => onRouteChange(\"signin\"),\n        children: \"Signout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MealPlanner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this) : route === \"signin\" ?\n    /*#__PURE__*/\n    // If the route state is \"signin\" it will show only the sign in form. If the route is not signin, that means the user is logged so the mealplanner will be shown\n    _jsxDEV(SigninForm, {\n      onRouteChange: onRouteChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this) : route === \"register\" ? /*#__PURE__*/_jsxDEV(RegisterForm, {\n      onRouteChange: onRouteChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Signin, \"+Knr7pChlnichfCVeOcR3+MD1Xk=\");\n\n_c = Signin;\nexport default Signin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"sources":["/Users/lorennav/Documents/Diana/Web Apps Diana/FoodyMealplanner_TechLabs/src/pages/Signin.js"],"names":["SigninForm","RegisterForm","MealPlanner","React","useState","Signin","route","setRoute","onRouteChange"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,0BAAvB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,QAAD,CAAlC,CADmB,CAC2B;AAC9C;;AAEA,QAAMI,aAAa,GAAIF,KAAD,IAAW;AAC/BC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAA,cACGA,KAAK,KAAK,MAAV,gBACC;AAAA,8BAEE;AAAG,QAAA,OAAO,EAAE,MAAME,aAAa,CAAC,QAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAIE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,GAOGF,KAAK,KAAK,QAAV;AAAA;AAAuB;AACzB,YAAC,UAAD;AAAY,MAAA,aAAa,EAAEE;AAA3B;AAAA;AAAA;AAAA;AAAA,YADE,GAEAF,KAAK,KAAK,UAAV,gBACF,QAAC,YAAD;AAAc,MAAA,aAAa,EAAEE;AAA7B;AAAA;AAAA;AAAA;AAAA,YADE,gBAGF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbJ;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA1BD;;GAAMH,M;;KAAAA,M;AA4BN,eAAeA,MAAf","sourcesContent":["import SigninForm from \"../components/SigninForm\";\nimport RegisterForm from \"../components/SigninForm\";\nimport MealPlanner from \"./MealPlanner\";\nimport React, { useState } from \"react\";\n\nconst Signin = () => {\n  const [route, setRoute] = useState(\"signin\"); // The authentification will be determine by the route state.\n  // Signin means that the user has to sign in.\n\n  const onRouteChange = (route) => {\n    setRoute(route);\n  };\n\n  return (\n    <div>\n      {route === \"home\" ? (\n        <div>\n          {/* Added a signout option that will change the state to sigin. This means that mealplanner will not be shown */}\n          <p onClick={() => onRouteChange(\"signin\")}>Signout</p>\n\n          <MealPlanner />\n        </div>\n      ) : route === \"signin\" ? ( // If the route state is \"signin\" it will show only the sign in form. If the route is not signin, that means the user is logged so the mealplanner will be shown\n        <SigninForm onRouteChange={onRouteChange} />\n      ) : route === \"register\" ? (\n        <RegisterForm onRouteChange={onRouteChange} />\n      ) : (\n        <h2>error</h2>\n      )}\n    </div>\n  );\n};\n\nexport default Signin;\n"]},"metadata":{},"sourceType":"module"}