{"ast":null,"code":"import _classCallCheck from\"/Users/lorennav/Documents/Diana/Web Apps Diana/FoodyMealplanner/FoodyMealplanner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/lorennav/Documents/Diana/Web Apps Diana/FoodyMealplanner/FoodyMealplanner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/lorennav/Documents/Diana/Web Apps Diana/FoodyMealplanner/FoodyMealplanner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/lorennav/Documents/Diana/Web Apps Diana/FoodyMealplanner/FoodyMealplanner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import axios from\"axios\";import CardMeal from\"./RecipeCard\";import\"./MealPlanner2.css\";import Filter from\"./Filter\";//const API_ID = process.env.REACT_APP_EDAMAM_API_ID;\n//const API_KEY = process.env.REACT_APP_EDAMAM_API_KEY;\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var API_ID=\"8d4623fe\";var API_KEY=\"dfb5f77b9d4cc062175b5cad111db198\";var URL=\"https://api.edamam.com/search?\";// We have to display 7 breakfasts, 7 lunches and 7 dinners;\n// We will get the recipes on the edamame API and use it on the state as an array;\n// Problem: We need diversity and not display the array always on the same order; The API doesnt have recipes ID's.\n// Possible solution: Get more than 7 meal from the API (ex: 40), Shuffle the array and then create a new array with only 7;\n// ex:          [banana, apple, orange, durian, kiwi, cherry, lemon, melon, pumpkin] -> then Reset ->\n//               [ apple, kiwi, pumpkin, banana, orange, melon, lemon, cherry, durian] -> Splice to 7 meals ->\n//               [ apple, kiwi, pumpkin, banana, orange, melon, lemon]\n//In Conclusion: 1ยบ get 40 recipes\n//               2ยบ Shuffle the 40 recipes\n//               3ยบ Get the first 7 recipes from that shuffled array\n// Since we have to display always 7 breakfasts, 7 lunches and 7 dinners I called the API 3 times with the meal types and put the recipes on the State as arrays.\n// Function to shuffle arrays\nfunction shuffleArray(array){var i=array.length-1;for(;i>0;i--){var j=Math.floor(Math.random()*(i+1));var temp=array[i];array[i]=array[j];array[j]=temp;}return array;}var MealPlan=/*#__PURE__*/function(_Component){_inherits(MealPlan,_Component);var _super=_createSuper(MealPlan);//default meal plan\nfunction MealPlan(){var _this;_classCallCheck(this,MealPlan);_this=_super.call(this);_this.onHandleRadioButton=function(e){_this.setState({diet:e.target.value});};_this.state={breakfast:[],lunch:[],dinner:[],diet:\"balanced\",mealType:\"breakfast\",numberMeals:\"40\"};return _this;}//Fetch API for the 3 types of meals (Breakfast, Lunch, Dinner)\n_createClass(MealPlan,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;axios.get(\"\".concat(URL,\"app_id=\").concat(API_ID,\"&app_key=\").concat(API_KEY,\"&q=&diet=\").concat(this.state.diet,\"&mealType=breakfast&from=0&to=\").concat(this.state.numberMeals)).then(function(res){console.log(res);_this2.setState({breakfast:res.data.hits});});axios.get(\"\".concat(URL,\"app_id=\").concat(API_ID,\"&app_key=\").concat(API_KEY,\"&q=&diet=\").concat(this.state.diet,\"&mealType=lunch&from=0&to=\").concat(this.state.numberMeals,\"&dishType=main\")).then(function(res){console.log(res);_this2.setState({lunch:res.data.hits});});axios.get(\"\".concat(URL,\"app_id=\").concat(API_ID,\"&app_key=\").concat(API_KEY,\"&q=&diet=\").concat(this.state.diet,\"&mealType=dinner&from=0&to=\").concat(this.state.numberMeals,\"&dishType=main\")).then(function(res){console.log(res);_this2.setState({dinner:res.data.hits});});}//Adding user preferences\n},{key:\"render\",value://displaying recipes per type of meal\nfunction render(){var _this$state=this.state,breakfast=_this$state.breakfast,lunch=_this$state.lunch,dinner=_this$state.dinner,days=_this$state.days;var shuffleBreakfastList=shuffleArray(breakfast);//Since we are display the recipe array elements, i shuffled the array to not show always the same order\nvar weeklyBreakfastNumber=shuffleBreakfastList.slice(0,7);// I asked for 40 recipes and I only want to display 7\nvar BreakfastCardList=breakfast.length?// create a recipe card for each recipe\nweeklyBreakfastNumber.map(function(recipe){return/*#__PURE__*/_jsx(CardMeal,{image:recipe.recipe.image,name:recipe.recipe.label,link:recipe.recipe.url,ingredients:recipe.recipe.ingredientLines});}):/*#__PURE__*/_jsxs(\"div\",{children:[\" \",/*#__PURE__*/_jsx(\"p\",{children:\"Meals are cooking...\"}),\" \"]});var shuffleLunchList=shuffleArray(lunch);//Since we are display the recipe array elements, i shuffled the array to not show always the same order\nvar weeklyLunchNumber=shuffleLunchList.slice(0,7);// I asked for 40 recipes and I only want to display 7\nvar LunchCardList=lunch.length?// create a recipe card for each recipe\nweeklyLunchNumber.map(function(recipe){return/*#__PURE__*/_jsx(CardMeal,{image:recipe.recipe.image,name:recipe.recipe.label,link:recipe.recipe.url,ingredients:recipe.recipe.ingredientLines});}):/*#__PURE__*/_jsxs(\"div\",{children:[\" \",/*#__PURE__*/_jsx(\"p\",{children:\"Meals are cooking...\"}),\" \"]});var shuffleDinnerList=shuffleArray(dinner);//Since we are display the recipe array elements, i shuffled the array to not show always the same order\nvar weeklyDinnerNumber=shuffleDinnerList.slice(0,7);// I asked for 40 recipes and I only want to display 7\nvar DinnerCardList=dinner.length?//   // create a recipe card for each recipe\nweeklyDinnerNumber.map(function(recipe){return/*#__PURE__*/_jsx(CardMeal,{image:recipe.recipe.image,name:recipe.recipe.label,link:recipe.recipe.url,ingredients:recipe.recipe.ingredientLines});}):/*#__PURE__*/_jsxs(\"div\",{children:[\" \",/*#__PURE__*/_jsx(\"p\",{children:\"Meals are cooking...\"}),\" \"]});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Meal Planner Happiness\"}),/*#__PURE__*/_jsx(Filter,{handleChange:this.onHandleRadioButton}),/*#__PURE__*/_jsxs(\"div\",{id:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mealtypes\",children:[\" \",/*#__PURE__*/_jsx(\"h2\",{children:\" \"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"plan_container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"days\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"meals\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Breakfast\"}),/*#__PURE__*/_jsx(\"div\",{id:\"breakfast\",children:BreakfastCardList}),/*#__PURE__*/_jsx(\"h2\",{children:\"Lunch\"}),/*#__PURE__*/_jsx(\"div\",{id:\"lunch\",children:LunchCardList}),/*#__PURE__*/_jsx(\"h2\",{children:\"Dinner\"}),/*#__PURE__*/_jsx(\"div\",{id:\"dinner\",children:DinnerCardList})]})]})]})]});}}]);return MealPlan;}(Component);export default MealPlan;","map":{"version":3,"sources":["/Users/lorennav/Documents/Diana/Web Apps Diana/FoodyMealplanner/FoodyMealplanner/src/MealPlanner.js"],"names":["React","Component","axios","CardMeal","Filter","API_ID","API_KEY","URL","shuffleArray","array","i","length","j","Math","floor","random","temp","MealPlan","onHandleRadioButton","e","setState","diet","target","value","state","breakfast","lunch","dinner","mealType","numberMeals","get","then","res","console","log","data","hits","days","shuffleBreakfastList","weeklyBreakfastNumber","slice","BreakfastCardList","map","recipe","image","label","url","ingredientLines","shuffleLunchList","weeklyLunchNumber","LunchCardList","shuffleDinnerList","weeklyDinnerNumber","DinnerCardList"],"mappings":"4wBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,cAArB,CACA,MAAO,oBAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CAEA;AACA;wFACA,GAAMC,CAAAA,MAAM,CAAG,UAAf,CACA,GAAMC,CAAAA,OAAO,CAAG,kCAAhB,CACA,GAAMC,CAAAA,GAAG,CAAG,gCAAZ,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CAC3B,GAAIC,CAAAA,CAAC,CAAGD,KAAK,CAACE,MAAN,CAAe,CAAvB,CACA,KAAOD,CAAC,CAAG,CAAX,CAAcA,CAAC,EAAf,CAAmB,CACjB,GAAME,CAAAA,CAAC,CAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,IAAiBL,CAAC,CAAG,CAArB,CAAX,CAAV,CACA,GAAMM,CAAAA,IAAI,CAAGP,KAAK,CAACC,CAAD,CAAlB,CACAD,KAAK,CAACC,CAAD,CAAL,CAAWD,KAAK,CAACG,CAAD,CAAhB,CACAH,KAAK,CAACG,CAAD,CAAL,CAAWI,IAAX,CACD,CACD,MAAOP,CAAAA,KAAP,CACD,C,GAEKQ,CAAAA,Q,oGACJ;AACA,mBAAc,0CACZ,wBADY,MAiDdC,mBAjDc,CAiDQ,SAACC,CAAD,CAAO,CAC3B,MAAKC,QAAL,CAAc,CAAEC,IAAI,CAAEF,CAAC,CAACG,MAAF,CAASC,KAAjB,CAAd,EACD,CAnDa,CAEZ,MAAKC,KAAL,CAAa,CACXC,SAAS,CAAE,EADA,CAEXC,KAAK,CAAE,EAFI,CAGXC,MAAM,CAAE,EAHG,CAIXN,IAAI,CAAE,UAJK,CAKXO,QAAQ,CAAE,WALC,CAMXC,WAAW,CAAE,IANF,CAAb,CAFY,aAUb,CAED;sDACA,4BAAoB,iBAClB3B,KAAK,CACF4B,GADH,WAEOvB,GAFP,mBAEoBF,MAFpB,qBAEsCC,OAFtC,qBAEyD,KAAKkB,KAAL,CAAWH,IAFpE,0CAEyG,KAAKG,KAAL,CAAWK,WAFpH,GAIGE,IAJH,CAIQ,SAACC,GAAD,CAAS,CACbC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACA,MAAI,CAACZ,QAAL,CAAc,CACZK,SAAS,CAAEO,GAAG,CAACG,IAAJ,CAASC,IADR,CAAd,EAGD,CATH,EAWAlC,KAAK,CACF4B,GADH,WAEOvB,GAFP,mBAEoBF,MAFpB,qBAEsCC,OAFtC,qBAEyD,KAAKkB,KAAL,CAAWH,IAFpE,sCAEqG,KAAKG,KAAL,CAAWK,WAFhH,oBAIGE,IAJH,CAIQ,SAACC,GAAD,CAAS,CACbC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACA,MAAI,CAACZ,QAAL,CAAc,CACZM,KAAK,CAAEM,GAAG,CAACG,IAAJ,CAASC,IADJ,CAAd,EAGD,CATH,EAWAlC,KAAK,CACF4B,GADH,WAEOvB,GAFP,mBAEoBF,MAFpB,qBAEsCC,OAFtC,qBAEyD,KAAKkB,KAAL,CAAWH,IAFpE,uCAEsG,KAAKG,KAAL,CAAWK,WAFjH,oBAIGE,IAJH,CAIQ,SAACC,GAAD,CAAS,CACbC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACA,MAAI,CAACZ,QAAL,CAAc,CACZO,MAAM,CAAEK,GAAG,CAACG,IAAJ,CAASC,IADL,CAAd,EAGD,CATH,EAUD,CAED;sBAKA;AACA,iBAAS,iBACoC,KAAKZ,KADzC,CACCC,SADD,aACCA,SADD,CACYC,KADZ,aACYA,KADZ,CACmBC,MADnB,aACmBA,MADnB,CAC2BU,IAD3B,aAC2BA,IAD3B,CAGP,GAAMC,CAAAA,oBAAoB,CAAG9B,YAAY,CAACiB,SAAD,CAAzC,CAAsD;AACtD,GAAMc,CAAAA,qBAAqB,CAAGD,oBAAoB,CAACE,KAArB,CAA2B,CAA3B,CAA8B,CAA9B,CAA9B,CAAgE;AAChE,GAAMC,CAAAA,iBAAiB,CAAGhB,SAAS,CAACd,MAAV,CAAqB;AAC7C4B,qBAAqB,CAACG,GAAtB,CAA0B,SAACC,MAAD,CAAY,CACpC,mBACE,KAAC,QAAD,EACE,KAAK,CAAEA,MAAM,CAACA,MAAP,CAAcC,KADvB,CAEE,IAAI,CAAED,MAAM,CAACA,MAAP,CAAcE,KAFtB,CAGE,IAAI,CAAEF,MAAM,CAACA,MAAP,CAAcG,GAHtB,CAIE,WAAW,CAAEH,MAAM,CAACA,MAAP,CAAcI,eAJ7B,EADF,CAQD,CATD,CADwB,cAYxB,uBACG,GADH,cAEE,2CAFF,CAE8B,GAF9B,GAZF,CAkBA,GAAMC,CAAAA,gBAAgB,CAAGxC,YAAY,CAACkB,KAAD,CAArC,CAA8C;AAC9C,GAAMuB,CAAAA,iBAAiB,CAAGD,gBAAgB,CAACR,KAAjB,CAAuB,CAAvB,CAA0B,CAA1B,CAA1B,CAAwD;AACxD,GAAMU,CAAAA,aAAa,CAAGxB,KAAK,CAACf,MAAN,CAAiB;AACrCsC,iBAAiB,CAACP,GAAlB,CAAsB,SAACC,MAAD,CAAY,CAChC,mBACE,KAAC,QAAD,EACE,KAAK,CAAEA,MAAM,CAACA,MAAP,CAAcC,KADvB,CAEE,IAAI,CAAED,MAAM,CAACA,MAAP,CAAcE,KAFtB,CAGE,IAAI,CAAEF,MAAM,CAACA,MAAP,CAAcG,GAHtB,CAIE,WAAW,CAAEH,MAAM,CAACA,MAAP,CAAcI,eAJ7B,EADF,CAQD,CATD,CADoB,cAYpB,uBACG,GADH,cAEE,2CAFF,CAE8B,GAF9B,GAZF,CAkBA,GAAMI,CAAAA,iBAAiB,CAAG3C,YAAY,CAACmB,MAAD,CAAtC,CAAgD;AAChD,GAAMyB,CAAAA,kBAAkB,CAAGD,iBAAiB,CAACX,KAAlB,CAAwB,CAAxB,CAA2B,CAA3B,CAA3B,CAA0D;AAC1D,GAAMa,CAAAA,cAAc,CAAG1B,MAAM,CAAChB,MAAP,CAAkB;AACvCyC,kBAAkB,CAACV,GAAnB,CAAuB,SAACC,MAAD,CAAY,CACjC,mBACE,KAAC,QAAD,EACE,KAAK,CAAEA,MAAM,CAACA,MAAP,CAAcC,KADvB,CAEE,IAAI,CAAED,MAAM,CAACA,MAAP,CAAcE,KAFtB,CAGE,IAAI,CAAEF,MAAM,CAACA,MAAP,CAAcG,GAHtB,CAIE,WAAW,CAAEH,MAAM,CAACA,MAAP,CAAcI,eAJ7B,EADF,CAQD,CATD,CADqB,cAYrB,uBACG,GADH,cAEE,2CAFF,CAE8B,GAF9B,GAZF,CAkBA,mBACE,oCACE,8CADF,cAEE,KAAC,MAAD,EAAQ,YAAY,CAAE,KAAK7B,mBAA3B,EAFF,cAGE,aAAK,EAAE,CAAC,WAAR,wBACE,aAAK,SAAS,CAAC,WAAf,WACG,GADH,cAEE,yBAFF,GADF,cAKE,aAAK,SAAS,CAAC,gBAAf,wBACE,YAAK,SAAS,CAAC,MAAf,EADF,cAEE,aAAK,SAAS,CAAC,OAAf,wBACE,iCADF,cAEE,YAAK,EAAE,CAAC,WAAR,UAAqBuB,iBAArB,EAFF,cAGE,6BAHF,cAIE,YAAK,EAAE,CAAC,OAAR,UAAiBS,aAAjB,EAJF,cAKE,8BALF,cAME,YAAK,EAAE,CAAC,QAAR,UAAkBG,cAAlB,EANF,GAFF,GALF,GAHF,GADF,CAuBD,C,sBA9IoBpD,S,EAiJvB,cAAegB,CAAAA,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport CardMeal from \"./RecipeCard\";\nimport \"./MealPlanner2.css\";\nimport Filter from \"./Filter\";\n\n//const API_ID = process.env.REACT_APP_EDAMAM_API_ID;\n//const API_KEY = process.env.REACT_APP_EDAMAM_API_KEY;\nconst API_ID = \"8d4623fe\";\nconst API_KEY = \"dfb5f77b9d4cc062175b5cad111db198\";\nconst URL = \"https://api.edamam.com/search?\";\n\n// We have to display 7 breakfasts, 7 lunches and 7 dinners;\n// We will get the recipes on the edamame API and use it on the state as an array;\n// Problem: We need diversity and not display the array always on the same order; The API doesnt have recipes ID's.\n// Possible solution: Get more than 7 meal from the API (ex: 40), Shuffle the array and then create a new array with only 7;\n// ex:          [banana, apple, orange, durian, kiwi, cherry, lemon, melon, pumpkin] -> then Reset ->\n//               [ apple, kiwi, pumpkin, banana, orange, melon, lemon, cherry, durian] -> Splice to 7 meals ->\n//               [ apple, kiwi, pumpkin, banana, orange, melon, lemon]\n//In Conclusion: 1ยบ get 40 recipes\n//               2ยบ Shuffle the 40 recipes\n//               3ยบ Get the first 7 recipes from that shuffled array\n// Since we have to display always 7 breakfasts, 7 lunches and 7 dinners I called the API 3 times with the meal types and put the recipes on the State as arrays.\n\n// Function to shuffle arrays\nfunction shuffleArray(array) {\n  let i = array.length - 1;\n  for (; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n}\n\nclass MealPlan extends Component {\n  //default meal plan\n  constructor() {\n    super();\n    this.state = {\n      breakfast: [],\n      lunch: [],\n      dinner: [],\n      diet: \"balanced\",\n      mealType: \"breakfast\",\n      numberMeals: \"40\",\n    };\n  }\n\n  //Fetch API for the 3 types of meals (Breakfast, Lunch, Dinner)\n  componentDidMount() {\n    axios\n      .get(\n        `${URL}app_id=${API_ID}&app_key=${API_KEY}&q=&diet=${this.state.diet}&mealType=breakfast&from=0&to=${this.state.numberMeals}`\n      )\n      .then((res) => {\n        console.log(res);\n        this.setState({\n          breakfast: res.data.hits,\n        });\n      });\n\n    axios\n      .get(\n        `${URL}app_id=${API_ID}&app_key=${API_KEY}&q=&diet=${this.state.diet}&mealType=lunch&from=0&to=${this.state.numberMeals}&dishType=main`\n      )\n      .then((res) => {\n        console.log(res);\n        this.setState({\n          lunch: res.data.hits,\n        });\n      });\n\n    axios\n      .get(\n        `${URL}app_id=${API_ID}&app_key=${API_KEY}&q=&diet=${this.state.diet}&mealType=dinner&from=0&to=${this.state.numberMeals}&dishType=main`\n      )\n      .then((res) => {\n        console.log(res);\n        this.setState({\n          dinner: res.data.hits,\n        });\n      });\n  }\n\n  //Adding user preferences\n  onHandleRadioButton = (e) => {\n    this.setState({ diet: e.target.value });\n  };\n\n  //displaying recipes per type of meal\n  render() {\n    const { breakfast, lunch, dinner, days } = this.state;\n\n    const shuffleBreakfastList = shuffleArray(breakfast); //Since we are display the recipe array elements, i shuffled the array to not show always the same order\n    const weeklyBreakfastNumber = shuffleBreakfastList.slice(0, 7); // I asked for 40 recipes and I only want to display 7\n    const BreakfastCardList = breakfast.length ? ( // create a recipe card for each recipe\n      weeklyBreakfastNumber.map((recipe) => {\n        return (\n          <CardMeal\n            image={recipe.recipe.image}\n            name={recipe.recipe.label}\n            link={recipe.recipe.url}\n            ingredients={recipe.recipe.ingredientLines}\n          />\n        );\n      })\n    ) : (\n      <div>\n        {\" \"}\n        <p>Meals are cooking...</p>{\" \"}\n      </div>\n    );\n\n    const shuffleLunchList = shuffleArray(lunch); //Since we are display the recipe array elements, i shuffled the array to not show always the same order\n    const weeklyLunchNumber = shuffleLunchList.slice(0, 7); // I asked for 40 recipes and I only want to display 7\n    const LunchCardList = lunch.length ? ( // create a recipe card for each recipe\n      weeklyLunchNumber.map((recipe) => {\n        return (\n          <CardMeal\n            image={recipe.recipe.image}\n            name={recipe.recipe.label}\n            link={recipe.recipe.url}\n            ingredients={recipe.recipe.ingredientLines}\n          />\n        );\n      })\n    ) : (\n      <div>\n        {\" \"}\n        <p>Meals are cooking...</p>{\" \"}\n      </div>\n    );\n\n    const shuffleDinnerList = shuffleArray(dinner); //Since we are display the recipe array elements, i shuffled the array to not show always the same order\n    const weeklyDinnerNumber = shuffleDinnerList.slice(0, 7); // I asked for 40 recipes and I only want to display 7\n    const DinnerCardList = dinner.length ? ( //   // create a recipe card for each recipe\n      weeklyDinnerNumber.map((recipe) => {\n        return (\n          <CardMeal\n            image={recipe.recipe.image}\n            name={recipe.recipe.label}\n            link={recipe.recipe.url}\n            ingredients={recipe.recipe.ingredientLines}\n          />\n        );\n      })\n    ) : (\n      <div>\n        {\" \"}\n        <p>Meals are cooking...</p>{\" \"}\n      </div>\n    );\n\n    return (\n      <div>\n        <h1>Meal Planner Happiness</h1>\n        <Filter handleChange={this.onHandleRadioButton} />\n        <div id=\"container\">\n          <div className=\"mealtypes\">\n            {\" \"}\n            <h2> </h2>\n          </div>\n          <div className=\"plan_container\">\n            <div className=\"days\"></div>\n            <div className=\"meals\">\n              <h2>Breakfast</h2>\n              <div id=\"breakfast\">{BreakfastCardList}</div>\n              <h2>Lunch</h2>\n              <div id=\"lunch\">{LunchCardList}</div>\n              <h2>Dinner</h2>\n              <div id=\"dinner\">{DinnerCardList}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MealPlan;\n"]},"metadata":{},"sourceType":"module"}