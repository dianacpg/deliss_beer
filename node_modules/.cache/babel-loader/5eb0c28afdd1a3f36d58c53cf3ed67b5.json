{"ast":null,"code":"var _jsxFileName = \"/Users/lorennav/Documents/Diana/Web Apps Diana/FoodyMealplanner_TechLabs/src/MealPlanner.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\"; //import CardMeal from \"./CardMeal\";\n\nimport \"./MealPlanner.css\"; //import Filter from \"./Filter\";\n\nimport MealList from \"./MealPlanner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_ID = process.env.REACT_APP_EDAMAM_API_ID;\nconst API_KEY = process.env.REACT_APP_EDAMAM_API_KEY; // We have to display 7 breakfasts, 7 lunches and 7 dinners;\n// We will get the recipes on the edamame API and use it on the state as an array;\n// Problem: We need diversity and not display the array always on the same order; The API doesnt have recipes ID's.\n// Possible solution: Get more than 7 meal from the API (ex: 40), Shuffle the array and then create a new array with only 7;\n// ex:          [banana, apple, orange, durian, kiwi, cherry, lemon, melon, pumpkin] -> then Reset ->\n//               [ apple, kiwi, pumpkin, banana, orange, melon, lemon, cherry, durian] -> Splice to 7 meals ->\n//               [ apple, kiwi, pumpkin, banana, orange, melon, lemon]\n//In Conclusion: 1º get 40 recipes\n//               2º Shuffle the 40 recipes\n//               3º Get the first 7 recipes from that shuffled array\n// Since we have to display always 7 breakfasts, 7 lunches and 7 dinners I called the API 3 times with the meal types and put the recipes on the State as arrays.\n\nconst MealPlanner = () => {\n  _s();\n\n  const [breakfast, setBreakfast] = useState([]);\n  useEffect(() => {\n    axios.get(`https://api.edamam.com/search?app_id=${API_ID}&app_key=${API_KEY}&q=&diet=balanced&from=0&to=10&mealType=breakfast`).then(res => {\n      setBreakfast(res.data.hits);\n    });\n  }, []); //Adding user preferences\n  //onHandleRadioButton = (e) => {\n  //  this.setState({ diet: e.target.value });\n  // };\n  //displaying recipes per type of meal\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"name\",\n    children: breakfast && /*#__PURE__*/_jsxDEV(MealList, {\n      props: breakfast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 41\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MealPlanner, \"KFy/SFq9WchIGIC+8aK9CUINO98=\");\n\n_c = MealPlanner;\nexport default MealPlanner; //     <Filter handleChange={this.onHandleRadioButton} />\n\nvar _c;\n\n$RefreshReg$(_c, \"MealPlanner\");","map":{"version":3,"sources":["/Users/lorennav/Documents/Diana/Web Apps Diana/FoodyMealplanner_TechLabs/src/MealPlanner.js"],"names":["React","useState","useEffect","axios","MealList","API_ID","process","env","REACT_APP_EDAMAM_API_ID","API_KEY","REACT_APP_EDAMAM_API_KEY","MealPlanner","breakfast","setBreakfast","get","then","res","data","hits"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,mBAAP,C,CACA;;AACA,OAAOC,QAAP,MAAqB,eAArB;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,uBAA3B;AACA,MAAMC,OAAO,GAAGH,OAAO,CAACC,GAAR,CAAYG,wBAA5B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CACFW,GADH,CAEK,wCAAuCT,MAAO,YAAWI,OAAQ,mDAFtE,EAIGM,IAJH,CAISC,GAAD,IAAS;AACbH,MAAAA,YAAY,CAACG,GAAG,CAACC,IAAJ,CAASC,IAAV,CAAZ;AACD,KANH;AAOD,GARQ,EAQN,EARM,CAAT,CAHwB,CAaxB;AACA;AACA;AACA;AAEA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,cAAuBN,SAAS,iBAAI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA;AAApC;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAvBD;;GAAMD,W;;KAAAA,W;AAyBN,eAAeA,WAAf,C,CAEA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n//import CardMeal from \"./CardMeal\";\nimport \"./MealPlanner.css\";\n//import Filter from \"./Filter\";\nimport MealList from \"./MealPlanner\";\n\nconst API_ID = process.env.REACT_APP_EDAMAM_API_ID;\nconst API_KEY = process.env.REACT_APP_EDAMAM_API_KEY;\n\n// We have to display 7 breakfasts, 7 lunches and 7 dinners;\n// We will get the recipes on the edamame API and use it on the state as an array;\n// Problem: We need diversity and not display the array always on the same order; The API doesnt have recipes ID's.\n// Possible solution: Get more than 7 meal from the API (ex: 40), Shuffle the array and then create a new array with only 7;\n// ex:          [banana, apple, orange, durian, kiwi, cherry, lemon, melon, pumpkin] -> then Reset ->\n//               [ apple, kiwi, pumpkin, banana, orange, melon, lemon, cherry, durian] -> Splice to 7 meals ->\n//               [ apple, kiwi, pumpkin, banana, orange, melon, lemon]\n//In Conclusion: 1º get 40 recipes\n//               2º Shuffle the 40 recipes\n//               3º Get the first 7 recipes from that shuffled array\n// Since we have to display always 7 breakfasts, 7 lunches and 7 dinners I called the API 3 times with the meal types and put the recipes on the State as arrays.\n\nconst MealPlanner = () => {\n  const [breakfast, setBreakfast] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.edamam.com/search?app_id=${API_ID}&app_key=${API_KEY}&q=&diet=balanced&from=0&to=10&mealType=breakfast`\n      )\n      .then((res) => {\n        setBreakfast(res.data.hits);\n      });\n  }, []);\n\n  //Adding user preferences\n  //onHandleRadioButton = (e) => {\n  //  this.setState({ diet: e.target.value });\n  // };\n\n  //displaying recipes per type of meal\n\n  return (\n    <div className=\"name\">{breakfast && <MealList props={breakfast} />}</div>\n  );\n};\n\nexport default MealPlanner;\n\n//     <Filter handleChange={this.onHandleRadioButton} />\n"]},"metadata":{},"sourceType":"module"}