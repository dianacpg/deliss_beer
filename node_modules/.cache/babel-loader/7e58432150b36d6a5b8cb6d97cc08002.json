{"ast":null,"code":"var _jsxFileName = \"/Users/lorennav/Documents/Diana/Web Apps Diana/FoodyMealplanner_TechLabs/src/pages/MealPlanner.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\"; //import CardMeal from \"./CardMeal\";\n\nimport \"../styles/MealPlanner.css\";\nimport Filter from \"../components/Filter\";\nimport MealList from \"../components/MealList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_ID = process.env.REACT_APP_EDAMAM_API_ID;\nconst API_KEY = process.env.REACT_APP_EDAMAM_API_KEY; // We will display a weekly meal planner with breakfast, lunch and dinner.\n//We will get the recipes on the edamame API\n\nconst MealPlanner = ({\n  user\n}) => {\n  _s();\n\n  const [breakfast, setBreakfast] = useState(null);\n  const [lunch, setLunch] = useState(null);\n  const [dinner, setDinner] = useState(null);\n  const [diet, setDiet] = useState(\"\"); //by default the diet will be standard\n  //NAO ESQUECER DE ATUALIZAR O NUMERO DE RECEITAS PARA 40!!!!!!\n\n  const URL = `https://api.edamam.com/search?app_id=${API_ID}&app_key=${API_KEY}&q=&healthLabels=${diet}&from=0&to=2&`;\n  useEffect(() => {\n    axios.get(URL + `mealType=breakfast`).then(res => {\n      setBreakfast(res.data.hits);\n    });\n    axios.get(URL + `dishType=main&mealType=lunch`).then(res => {\n      setLunch(res.data.hits);\n    });\n    axios.get(URL + `dishType=main&mealType=dinner`).then(res => {\n      setDinner(res.data.hits);\n    });\n  }, [diet]); //it will only render if the user filters the diet type\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Meal Planner Happiness\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter //Added a filter option for standard, vegetarian and vegan\n    , {\n      handleChange: e => {\n        setDiet(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plan_container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meals\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Breakfast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"breakfast\",\n          children: breakfast && /*#__PURE__*/_jsxDEV(MealList, {\n            props: breakfast,\n            diet: diet,\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Lunch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"lunch\",\n          children: lunch && /*#__PURE__*/_jsxDEV(MealList, {\n            props: lunch,\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Dinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"dinner\",\n          children: dinner && /*#__PURE__*/_jsxDEV(MealList, {\n            props: dinner,\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MealPlanner, \"Pb0PnbAZWgBV78pey9D5oxlUOIo=\");\n\n_c = MealPlanner;\nexport default MealPlanner; //\n\nvar _c;\n\n$RefreshReg$(_c, \"MealPlanner\");","map":{"version":3,"sources":["/Users/lorennav/Documents/Diana/Web Apps Diana/FoodyMealplanner_TechLabs/src/pages/MealPlanner.js"],"names":["React","useState","useEffect","axios","Filter","MealList","API_ID","process","env","REACT_APP_EDAMAM_API_ID","API_KEY","REACT_APP_EDAMAM_API_KEY","MealPlanner","user","breakfast","setBreakfast","lunch","setLunch","dinner","setDinner","diet","setDiet","URL","get","then","res","data","hits","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n//import CardMeal from \"./CardMeal\";\nimport \"../styles/MealPlanner.css\";\nimport Filter from \"../components/Filter\";\nimport MealList from \"../components/MealList\";\n\nconst API_ID = process.env.REACT_APP_EDAMAM_API_ID;\nconst API_KEY = process.env.REACT_APP_EDAMAM_API_KEY;\n\n// We will display a weekly meal planner with breakfast, lunch and dinner.\n//We will get the recipes on the edamame API\nconst MealPlanner = ({ user }) => {\n  const [breakfast, setBreakfast] = useState(null);\n  const [lunch, setLunch] = useState(null);\n  const [dinner, setDinner] = useState(null);\n  const [diet, setDiet] = useState(\"\"); //by default the diet will be standard\n\n  //NAO ESQUECER DE ATUALIZAR O NUMERO DE RECEITAS PARA 40!!!!!!\n  const URL = `https://api.edamam.com/search?app_id=${API_ID}&app_key=${API_KEY}&q=&healthLabels=${diet}&from=0&to=2&`;\n\n  useEffect(() => {\n    axios.get(URL + `mealType=breakfast`).then((res) => {\n      setBreakfast(res.data.hits);\n    });\n\n    axios.get(URL + `dishType=main&mealType=lunch`).then((res) => {\n      setLunch(res.data.hits);\n    });\n\n    axios.get(URL + `dishType=main&mealType=dinner`).then((res) => {\n      setDinner(res.data.hits);\n    });\n  }, [diet]); //it will only render if the user filters the diet type\n\n  return (\n    <div>\n      <h1>Meal Planner Happiness</h1>\n      <Filter //Added a filter option for standard, vegetarian and vegan\n        handleChange={(e) => {\n          setDiet(e.target.value);\n        }}\n      />\n      <div className=\"plan_container\">\n        <div className=\"meals\">\n          <h2>Breakfast</h2>\n          <div id=\"breakfast\">\n            {/* Recipes will be displayed by the MealList component, passing breakfast,lunch and dinner arrays as props */}\n            {/* Conditional Rendering.Only output MealList when we have a value for breakfast. */}\n            {breakfast && (\n              <MealList props={breakfast} diet={diet} user={user} />\n            )}\n          </div>\n          <h2>Lunch</h2>\n          <div id=\"lunch\">\n            {lunch && <MealList props={lunch} user={user} />}\n          </div>\n          <h2>Dinner</h2>\n          <div id=\"dinner\">\n            {dinner && <MealList props={dinner} user={user} />}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MealPlanner;\n\n//\n"]},"metadata":{},"sourceType":"module"}