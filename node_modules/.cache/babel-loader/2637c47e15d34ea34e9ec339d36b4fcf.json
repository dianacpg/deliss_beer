{"ast":null,"code":"import _slicedToArray from\"/Users/lorennav/Documents/Diana/Web Apps Diana/Deliss/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import axios from\"axios\";import Filter from\"../components/Filter\";import MealList from\"../components/MealList\";import\"../styles/MealPlanner.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var API_ID=process.env.REACT_APP_EDAMAM_API_ID;var API_KEY=process.env.REACT_APP_EDAMAM_API_KEY;// We will display a weekly meal planner with breakfast, lunch and dinner.\n//We will get the recipes on the edamame API\nvar MealPlanner=function MealPlanner(_ref){var user=_ref.user;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),breakfast=_useState2[0],setBreakfast=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),lunch=_useState4[0],setLunch=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),dinner=_useState6[0],setDinner=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),diet=_useState8[0],setDiet=_useState8[1];//by default the diet will be standard\n//NAO ESQUECER DE ATUALIZAR O NUMERO DE RECEITAS PARA 40!!!!!!\nvar URL=\"https://api.edamam.com/search?app_id=\".concat(API_ID,\"&app_key=\").concat(API_KEY,\"&q=&healthLabels=\").concat(diet,\"&from=0&to=20&\");useEffect(function(){axios.get(URL+\"mealType=breakfast\",{mode:\"cors\",cache:\"no-cache\"}).then(function(res){setBreakfast(res.data.hits);}).catch(console.log);axios.get(URL+\"dishType=main&mealType=lunch\").then(function(res){setLunch(res.data.hits);}).catch(console.log);axios.get(URL+\"dishType=main&mealType=dinner\").then(function(res){setDinner(res.data.hits);}).catch(console.log);},[diet]);//it will only render if the user filters the diet type\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"plan_container\",children:[/*#__PURE__*/_jsx(Filter//Added a filter option for standard, vegetarian and vegan\n,{handleChange:function handleChange(e){setDiet(e.target.value);}}),/*#__PURE__*/_jsx(\"h2\",{children:\"Breakfast\"}),/*#__PURE__*/_jsx(\"div\",{id:\"breakfast\",children:breakfast&&/*#__PURE__*/_jsx(MealList,{props:breakfast,diet:diet,user:user})}),/*#__PURE__*/_jsx(\"h2\",{children:\"Lunch\"}),/*#__PURE__*/_jsx(\"div\",{id:\"lunch\",children:lunch&&/*#__PURE__*/_jsx(MealList,{props:lunch,user:user})}),/*#__PURE__*/_jsx(\"h2\",{children:\"Dinner\"}),/*#__PURE__*/_jsx(\"div\",{id:\"dinner\",children:dinner&&/*#__PURE__*/_jsx(MealList,{props:dinner,user:user})})]});};export default MealPlanner;//","map":{"version":3,"sources":["/Users/lorennav/Documents/Diana/Web Apps Diana/Deliss/src/pages/MealPlanner.js"],"names":["React","useState","useEffect","axios","Filter","MealList","API_ID","process","env","REACT_APP_EDAMAM_API_ID","API_KEY","REACT_APP_EDAMAM_API_KEY","MealPlanner","user","breakfast","setBreakfast","lunch","setLunch","dinner","setDinner","diet","setDiet","URL","get","mode","cache","then","res","data","hits","catch","console","log","e","target","value"],"mappings":"4KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,MAAO,2BAAP,C,wFAEA,GAAMC,CAAAA,MAAM,CAAGC,OAAO,CAACC,GAAR,CAAYC,uBAA3B,CACA,GAAMC,CAAAA,OAAO,CAAGH,OAAO,CAACC,GAAR,CAAYG,wBAA5B,CAEA;AACA;AACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAc,IAAXC,CAAAA,IAAW,MAAXA,IAAW,eACEZ,QAAQ,CAAC,IAAD,CADV,wCACzBa,SADyB,eACdC,YADc,8BAENd,QAAQ,CAAC,IAAD,CAFF,yCAEzBe,KAFyB,eAElBC,QAFkB,8BAGJhB,QAAQ,CAAC,IAAD,CAHJ,yCAGzBiB,MAHyB,eAGjBC,SAHiB,8BAIRlB,QAAQ,CAAC,EAAD,CAJA,yCAIzBmB,IAJyB,eAInBC,OAJmB,eAIM;AAEtC;AACA,GAAMC,CAAAA,GAAG,gDAA2ChB,MAA3C,qBAA6DI,OAA7D,6BAAwFU,IAAxF,kBAAT,CAEAlB,SAAS,CAAC,UAAM,CACdC,KAAK,CACFoB,GADH,CACOD,GAAG,qBADV,CACmC,CAC/BE,IAAI,CAAE,MADyB,CAE/BC,KAAK,CAAE,UAFwB,CADnC,EAKGC,IALH,CAKQ,SAACC,GAAD,CAAS,CACbZ,YAAY,CAACY,GAAG,CAACC,IAAJ,CAASC,IAAV,CAAZ,CACD,CAPH,EAQGC,KARH,CAQSC,OAAO,CAACC,GARjB,EAUA7B,KAAK,CACFoB,GADH,CACOD,GAAG,+BADV,EAEGI,IAFH,CAEQ,SAACC,GAAD,CAAS,CACbV,QAAQ,CAACU,GAAG,CAACC,IAAJ,CAASC,IAAV,CAAR,CACD,CAJH,EAKGC,KALH,CAKSC,OAAO,CAACC,GALjB,EAOA7B,KAAK,CACFoB,GADH,CACOD,GAAG,gCADV,EAEGI,IAFH,CAEQ,SAACC,GAAD,CAAS,CACbR,SAAS,CAACQ,GAAG,CAACC,IAAJ,CAASC,IAAV,CAAT,CACD,CAJH,EAKGC,KALH,CAKSC,OAAO,CAACC,GALjB,EAMD,CAxBQ,CAwBN,CAACZ,IAAD,CAxBM,CAAT,CAwBY;AAEZ,mBACE,aAAK,SAAS,CAAC,gBAAf,wBACE,KAAC,MAAO;AAAR,EACE,YAAY,CAAE,sBAACa,CAAD,CAAO,CACnBZ,OAAO,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP,CACD,CAHH,EADF,cAOE,iCAPF,cAQE,YAAK,EAAE,CAAC,WAAR,UAGGrB,SAAS,eAAI,KAAC,QAAD,EAAU,KAAK,CAAEA,SAAjB,CAA4B,IAAI,CAAEM,IAAlC,CAAwC,IAAI,CAAEP,IAA9C,EAHhB,EARF,cAaE,6BAbF,cAcE,YAAK,EAAE,CAAC,OAAR,UAAiBG,KAAK,eAAI,KAAC,QAAD,EAAU,KAAK,CAAEA,KAAjB,CAAwB,IAAI,CAAEH,IAA9B,EAA1B,EAdF,cAeE,8BAfF,cAgBE,YAAK,EAAE,CAAC,QAAR,UAAkBK,MAAM,eAAI,KAAC,QAAD,EAAU,KAAK,CAAEA,MAAjB,CAAyB,IAAI,CAAEL,IAA/B,EAA5B,EAhBF,GADF,CAoBD,CAvDD,CAyDA,cAAeD,CAAAA,WAAf,CAEA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Filter from \"../components/Filter\";\nimport MealList from \"../components/MealList\";\nimport \"../styles/MealPlanner.css\";\n\nconst API_ID = process.env.REACT_APP_EDAMAM_API_ID;\nconst API_KEY = process.env.REACT_APP_EDAMAM_API_KEY;\n\n// We will display a weekly meal planner with breakfast, lunch and dinner.\n//We will get the recipes on the edamame API\nconst MealPlanner = ({ user }) => {\n  const [breakfast, setBreakfast] = useState(null);\n  const [lunch, setLunch] = useState(null);\n  const [dinner, setDinner] = useState(null);\n  const [diet, setDiet] = useState(\"\"); //by default the diet will be standard\n\n  //NAO ESQUECER DE ATUALIZAR O NUMERO DE RECEITAS PARA 40!!!!!!\n  const URL = `https://api.edamam.com/search?app_id=${API_ID}&app_key=${API_KEY}&q=&healthLabels=${diet}&from=0&to=20&`;\n\n  useEffect(() => {\n    axios\n      .get(URL + `mealType=breakfast`, {\n        mode: \"cors\",\n        cache: \"no-cache\",\n      })\n      .then((res) => {\n        setBreakfast(res.data.hits);\n      })\n      .catch(console.log);\n\n    axios\n      .get(URL + `dishType=main&mealType=lunch`)\n      .then((res) => {\n        setLunch(res.data.hits);\n      })\n      .catch(console.log);\n\n    axios\n      .get(URL + `dishType=main&mealType=dinner`)\n      .then((res) => {\n        setDinner(res.data.hits);\n      })\n      .catch(console.log);\n  }, [diet]); //it will only render if the user filters the diet type\n\n  return (\n    <div className=\"plan_container\">\n      <Filter //Added a filter option for standard, vegetarian and vegan\n        handleChange={(e) => {\n          setDiet(e.target.value);\n        }}\n      />\n\n      <h2>Breakfast</h2>\n      <div id=\"breakfast\">\n        {/* Recipes will be displayed by the MealList component, passing breakfast,lunch and dinner arrays as props */}\n        {/* Conditional Rendering.Only output MealList when we have a value for breakfast. */}\n        {breakfast && <MealList props={breakfast} diet={diet} user={user} />}\n      </div>\n      <h2>Lunch</h2>\n      <div id=\"lunch\">{lunch && <MealList props={lunch} user={user} />}</div>\n      <h2>Dinner</h2>\n      <div id=\"dinner\">{dinner && <MealList props={dinner} user={user} />}</div>\n    </div>\n  );\n};\n\nexport default MealPlanner;\n\n//\n"]},"metadata":{},"sourceType":"module"}