{"ast":null,"code":"import _slicedToArray from\"/Users/lorennav/Documents/Diana/Web Apps Diana/FoodyMealplanner/FoodyMealplanner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import\"./Quotes.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Quotes(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),quote=_useState2[0],setQuote=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),author=_useState4[0],setAuthor=_useState4[1];useEffect(function(){getQuote();var intervalID=setInterval(function(){getQuote();},24*60*60*1000);return function(){clearInterval(intervalID);};},[]);function getQuote(){fetch(\"https://quotes.rest/qod.json?category=inspire\").then(function(res){return res.json();}).then(function(data){setQuote(data.contents.quotes[0].quote);setAuthor(data.contents.quotes[0].author);});}return/*#__PURE__*/_jsxs(\"div\",{className:\"quote\",children:[/*#__PURE__*/_jsx(\"strong\",{className:\"quoteText\",children:quote}),/*#__PURE__*/_jsxs(\"span\",{className:\"quoteAuthor\",children:[\" - \",author]})]});}export default Quotes;","map":{"version":3,"sources":["/Users/lorennav/Documents/Diana/Web Apps Diana/FoodyMealplanner/FoodyMealplanner/src/Quotes.js"],"names":["React","useState","useEffect","Quotes","quote","setQuote","author","setAuthor","getQuote","intervalID","setInterval","clearInterval","fetch","then","res","json","data","contents","quotes"],"mappings":"uMAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAO,cAAP,C,wFAEA,QAASC,CAAAA,MAAT,EAAkB,eACUF,QAAQ,CAAC,EAAD,CADlB,wCACTG,KADS,eACFC,QADE,8BAEYJ,QAAQ,CAAC,EAAD,CAFpB,yCAETK,MAFS,eAEDC,SAFC,eAIhBL,SAAS,CAAC,UAAM,CACdM,QAAQ,GACR,GAAMC,CAAAA,UAAU,CAAGC,WAAW,CAAC,UAAM,CACnCF,QAAQ,GACT,CAF6B,CAE3B,GAAK,EAAL,CAAU,EAAV,CAAe,IAFY,CAA9B,CAGA,MAAO,WAAM,CACXG,aAAa,CAACF,UAAD,CAAb,CACD,CAFD,CAGD,CARQ,CAQN,EARM,CAAT,CASA,QAASD,CAAAA,QAAT,EAAoB,CAClBI,KAAK,CAAC,+CAAD,CAAL,CACGC,IADH,CACQ,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EADR,EAEGF,IAFH,CAEQ,SAACG,IAAD,CAAU,CACdX,QAAQ,CAACW,IAAI,CAACC,QAAL,CAAcC,MAAd,CAAqB,CAArB,EAAwBd,KAAzB,CAAR,CACAG,SAAS,CAACS,IAAI,CAACC,QAAL,CAAcC,MAAd,CAAqB,CAArB,EAAwBZ,MAAzB,CAAT,CACD,CALH,EAMD,CACD,mBACE,aAAK,SAAS,CAAC,OAAf,wBACE,eAAQ,SAAS,CAAC,WAAlB,UAA+BF,KAA/B,EADF,cAEE,cAAM,SAAS,CAAC,aAAhB,iBAAkCE,MAAlC,GAFF,GADF,CAMD,CACD,cAAeH,CAAAA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Quotes.css\";\n\nfunction Quotes() {\n  const [quote, setQuote] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n\n  useEffect(() => {\n    getQuote();\n    const intervalID = setInterval(() => {\n      getQuote();\n    }, 24 * 60 * 60 * 1000);\n    return () => {\n      clearInterval(intervalID);\n    };\n  }, []);\n  function getQuote() {\n    fetch(\"https://quotes.rest/qod.json?category=inspire\")\n      .then((res) => res.json())\n      .then((data) => {\n        setQuote(data.contents.quotes[0].quote);\n        setAuthor(data.contents.quotes[0].author);\n      });\n  }\n  return (\n    <div className=\"quote\">\n      <strong className=\"quoteText\">{quote}</strong>\n      <span className=\"quoteAuthor\"> - {author}</span>\n    </div>\n  );\n}\nexport default Quotes;\n"]},"metadata":{},"sourceType":"module"}