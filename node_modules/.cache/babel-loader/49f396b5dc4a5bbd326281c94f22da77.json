{"ast":null,"code":"import _slicedToArray from\"/Users/lorennav/Documents/Diana/Web Apps Diana/DelissBeer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SigninForm=function SigninForm(_ref){var onRouteChange=_ref.onRouteChange,updateLoadUser=_ref.updateLoadUser;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),signInEmail=_useState2[0],setSignInEmail=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),signInPassword=_useState4[0],setSigninPassword=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),errorLogin=_useState6[0],setErrorLogin=_useState6[1];//to change the state to what the user writes in the signin form\nvar onEmailChange=function onEmailChange(event){setSignInEmail(event.target.value);};var onPasswordChange=function onPasswordChange(event){setSigninPassword(event.target.value);};//When submit, we will connect to the server to post the email and password\nvar onSubmitSignIn=function onSubmitSignIn(e){e.preventDefault();//prevent the default submit event. Don't forget to put also on e param on the onSubmitSignIn - SigninForm\nfetch(\"https://guarded-peak-18752.herokuapp.com/signin\",{method:\"post\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email:signInEmail,password:signInPassword})}).then(function(response){return response.json();}).then(function(user){//after we post, if it matches with the email and password database, the response from the server will be user details. So if we receive an id that means it was the post === database\nif(user.id){updateLoadUser(user);//to update user details\nonRouteChange(\"beermatch\");// to change state from signin to mealplanner and show the mealplan\n}else{setErrorLogin(\"Wrong Credentials!\");}});};return/*#__PURE__*/_jsx(\"article\",{className:\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw5 shadow-5 center \",children:/*#__PURE__*/_jsx(\"main\",{className:\"pa4\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"measure\",children:[/*#__PURE__*/_jsxs(\"fieldset\",{id:\"sign_up\",className:\"ba b--transparent ph0 mh0\",children:[/*#__PURE__*/_jsx(\"legend\",{className:\"f4 fw6 ph0 mh0\",style:{color:\" orange\"},children:\"Sign In\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"db fw6 lh-copy f6\",htmlFor:\"email-address\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{className:\"f7 pa2 input-reset ba bg-transparent w-100\",type:\"email\",name:\"email-address\",id:\"email-address\",placeholder:\"Enter your email\",onChange:onEmailChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mv3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"db fw6 lh-copy f6\",htmlFor:\"password\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{className:\"f7 pa2 input-reset ba bg-transparent w-100\",type:\"password\",name:\"password\",id:\"password\",placeholder:\"Enter your password\",onChange:onPasswordChange})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"\",children:/*#__PURE__*/_jsx(\"input\",{// when submit Signin it will change the state from signin to beermatch so that the mealplanner in order to access the mealplan\nonClick:function onClick(e){return onSubmitSignIn(e);},className:\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\",type:\"submit\",value:\"Sign in\",style:{color:\"black\"}})}),errorLogin!==\"\"&&/*#__PURE__*/_jsx(\"p\",{id:\"error\",children:errorLogin}),/*#__PURE__*/_jsx(\"div\",{className:\"lh-copy mt3\",children:/*#__PURE__*/_jsx(\"p\",{// when submit Signin it will change to register to show the registerForm\nonClick:function onClick(){return onRouteChange(\"register\");},className:\"f6 link dim black db pointer\",style:{color:\"black\"},children:\"Register\"})})]})})});};export default SigninForm;","map":{"version":3,"sources":["/Users/lorennav/Documents/Diana/Web Apps Diana/DelissBeer/src/components/SigninForm.js"],"names":["React","useState","SigninForm","onRouteChange","updateLoadUser","signInEmail","setSignInEmail","signInPassword","setSigninPassword","errorLogin","setErrorLogin","onEmailChange","event","target","value","onPasswordChange","onSubmitSignIn","e","preventDefault","fetch","method","headers","body","JSON","stringify","email","password","then","response","json","user","id","color"],"mappings":"gLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,C,wFAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAAuC,IAApCC,CAAAA,aAAoC,MAApCA,aAAoC,CAArBC,cAAqB,MAArBA,cAAqB,eAClBH,QAAQ,CAAC,EAAD,CADU,wCACjDI,WADiD,eACpCC,cADoC,8BAEZL,QAAQ,CAAC,EAAD,CAFI,yCAEjDM,cAFiD,eAEjCC,iBAFiC,8BAGpBP,QAAQ,CAAC,EAAD,CAHY,yCAGjDQ,UAHiD,eAGrCC,aAHqC,eAKxD;AACA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,CAC/BN,cAAc,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd,CACD,CAFD,CAIA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACH,KAAD,CAAW,CAClCJ,iBAAiB,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAjB,CACD,CAFD,CAIA;AACA,GAAME,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,CAAD,CAAO,CAC5BA,CAAC,CAACC,cAAF,GAAoB;AACpBC,KAAK,CAAC,iDAAD,CAAoD,CACvDC,MAAM,CAAE,MAD+C,CAEvDC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAF8C,CAGvDC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBC,KAAK,CAAEpB,WADY,CAEnBqB,QAAQ,CAAEnB,cAFS,CAAf,CAHiD,CAApD,CAAL,CAQGoB,IARH,CAQQ,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAT,EAAd,EARR,EASGF,IATH,CASQ,SAACG,IAAD,CAAU,CACd;AACA,GAAIA,IAAI,CAACC,EAAT,CAAa,CACX3B,cAAc,CAAC0B,IAAD,CAAd,CAAsB;AACtB3B,aAAa,CAAC,WAAD,CAAb,CAA4B;AAC7B,CAHD,IAGO,CACLO,aAAa,CAAC,oBAAD,CAAb,CACD,CACF,CAjBH,EAkBD,CApBD,CAsBA,mBACE,gBAAS,SAAS,CAAC,2EAAnB,uBACE,aAAM,SAAS,CAAC,KAAhB,uBACE,cAAM,SAAS,CAAC,SAAhB,wBACE,kBAAU,EAAE,CAAC,SAAb,CAAuB,SAAS,CAAC,2BAAjC,wBACE,eAAQ,SAAS,CAAC,gBAAlB,CAAmC,KAAK,CAAE,CAAEsB,KAAK,CAAE,SAAT,CAA1C,qBADF,cAKE,aAAK,SAAS,CAAC,KAAf,wBACE,cAAO,SAAS,CAAC,mBAAjB,CAAqC,OAAO,CAAC,eAA7C,mBADF,cAIE,cACE,SAAS,CAAC,4CADZ,CAEE,IAAI,CAAC,OAFP,CAGE,IAAI,CAAC,eAHP,CAIE,EAAE,CAAC,eAJL,CAKE,WAAW,CAAC,kBALd,CAME,QAAQ,CAAErB,aANZ,EAJF,GALF,cAkBE,aAAK,SAAS,CAAC,KAAf,wBACE,cAAO,SAAS,CAAC,mBAAjB,CAAqC,OAAO,CAAC,UAA7C,sBADF,cAIE,cACE,SAAS,CAAC,4CADZ,CAEE,IAAI,CAAC,UAFP,CAGE,IAAI,CAAC,UAHP,CAIE,EAAE,CAAC,UAJL,CAKE,WAAW,CAAC,qBALd,CAME,QAAQ,CAAEI,gBANZ,EAJF,GAlBF,GADF,cAiCE,YAAK,SAAS,CAAC,EAAf,uBACE,cAAO;AACL,OAAO,CAAE,iBAACE,CAAD,QAAOD,CAAAA,cAAc,CAACC,CAAD,CAArB,EADX,CAEE,SAAS,CAAC,sEAFZ,CAGE,IAAI,CAAC,QAHP,CAIE,KAAK,CAAC,SAJR,CAKE,KAAK,CAAE,CAAEe,KAAK,CAAE,OAAT,CALT,EADF,EAjCF,CA0CGvB,UAAU,GAAK,EAAf,eAAqB,UAAG,EAAE,CAAC,OAAN,UAAeA,UAAf,EA1CxB,cA2CE,YAAK,SAAS,CAAC,aAAf,uBACE,UAAG;AACD,OAAO,CAAE,yBAAMN,CAAAA,aAAa,CAAC,UAAD,CAAnB,EADX,CAEE,SAAS,CAAC,8BAFZ,CAGE,KAAK,CAAE,CAAE6B,KAAK,CAAE,OAAT,CAHT,sBADF,EA3CF,GADF,EADF,EADF,CA2DD,CAhGD,CAkGA,cAAe9B,CAAAA,UAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst SigninForm = ({ onRouteChange, updateLoadUser }) => {\n  const [signInEmail, setSignInEmail] = useState(\"\");\n  const [signInPassword, setSigninPassword] = useState(\"\");\n  const [errorLogin, setErrorLogin] = useState(\"\");\n\n  //to change the state to what the user writes in the signin form\n  const onEmailChange = (event) => {\n    setSignInEmail(event.target.value);\n  };\n\n  const onPasswordChange = (event) => {\n    setSigninPassword(event.target.value);\n  };\n\n  //When submit, we will connect to the server to post the email and password\n  const onSubmitSignIn = (e) => {\n    e.preventDefault(); //prevent the default submit event. Don't forget to put also on e param on the onSubmitSignIn - SigninForm\n    fetch(\"https://guarded-peak-18752.herokuapp.com/signin\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        email: signInEmail,\n        password: signInPassword,\n      }),\n    })\n      .then((response) => response.json())\n      .then((user) => {\n        //after we post, if it matches with the email and password database, the response from the server will be user details. So if we receive an id that means it was the post === database\n        if (user.id) {\n          updateLoadUser(user); //to update user details\n          onRouteChange(\"beermatch\"); // to change state from signin to mealplanner and show the mealplan\n        } else {\n          setErrorLogin(\"Wrong Credentials!\");\n        }\n      });\n  };\n\n  return (\n    <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw5 shadow-5 center \">\n      <main className=\"pa4\">\n        <form className=\"measure\">\n          <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n            <legend className=\"f4 fw6 ph0 mh0\" style={{ color: \" orange\" }}>\n              Sign In\n            </legend>\n\n            <div className=\"mt3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\n                Email\n              </label>\n              <input\n                className=\"f7 pa2 input-reset ba bg-transparent w-100\"\n                type=\"email\"\n                name=\"email-address\"\n                id=\"email-address\"\n                placeholder=\"Enter your email\"\n                onChange={onEmailChange}\n              />\n            </div>\n            <div className=\"mv3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\n                Password\n              </label>\n              <input\n                className=\"f7 pa2 input-reset ba bg-transparent w-100\"\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                placeholder=\"Enter your password\"\n                onChange={onPasswordChange}\n              />\n            </div>\n          </fieldset>\n          <div className=\"\">\n            <input // when submit Signin it will change the state from signin to beermatch so that the mealplanner in order to access the mealplan\n              onClick={(e) => onSubmitSignIn(e)}\n              className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n              type=\"submit\"\n              value=\"Sign in\"\n              style={{ color: \"black\" }}\n            />\n          </div>\n          {errorLogin !== \"\" && <p id=\"error\">{errorLogin}</p>}\n          <div className=\"lh-copy mt3\">\n            <p // when submit Signin it will change to register to show the registerForm\n              onClick={() => onRouteChange(\"register\")}\n              className=\"f6 link dim black db pointer\"\n              style={{ color: \"black\" }}\n            >\n              Register\n            </p>\n          </div>\n        </form>\n      </main>\n    </article>\n  );\n};\n\nexport default SigninForm;\n"]},"metadata":{},"sourceType":"module"}