{"ast":null,"code":"import _slicedToArray from\"/Users/lorennav/Documents/Diana/Web Apps Diana/Deliss/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var RegisterForm=function RegisterForm(_ref){var onRouteChange=_ref.onRouteChange,updateLoadUser=_ref.updateLoadUser;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),email=_useState2[0],addEmail=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),name=_useState4[0],addName=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],addPassword=_useState6[1];//to change the state to what the user writes in the signin form\nvar onEmailChange=function onEmailChange(event){addEmail(event.target.value);};var onNameChange=function onNameChange(event){addName(event.target.value);};var onPasswordChange=function onPasswordChange(event){addPassword(event.target.value);};//when the user submit is going to post the info and then if we guet a response\nvar onSubmitRegister=function onSubmitRegister(e){e.preventDefault();//prevent the default submit event. Don't forget to put also on e param on the onSubmitSignIn - SigninForm\nfetch(\"https://guarded-peak-18752.herokuapp.com/register\",{method:\"post\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({name:name,email:email,password:password})}).then(function(response){return response.json();}).then(function(user){//in our server, the register post resturn the last user, so the response is going to be the user details\nif(user){updateLoadUser(user);//is to update the user profile\nonRouteChange(\"signin\");}});};return/*#__PURE__*/_jsx(\"article\",{className:\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw5 shadow-5 center \",children:/*#__PURE__*/_jsx(\"main\",{className:\"pa4\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"measure\",children:[/*#__PURE__*/_jsxs(\"fieldset\",{id:\"sign_up\",className:\"ba b--transparent ph0 mh0\",children:[/*#__PURE__*/_jsx(\"legend\",{className:\"f4 fw6 ph0 mh0\",style:{color:\" #2a9d8f\"},children:\"Register\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"db fw6 lh-copy f6\",for:\"name\",children:\"Name\"}),/*#__PURE__*/_jsx(\"input\",{required:\"required\",className:\"pa2 input-reset ba bg-transparent\",type:\"text\",name:\"name\",id:\"name\",onChange:onNameChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"db fw6 lh-copy f6\",for:\"email-address\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{required:true,className:\"pa2 input-reset ba bg-transparent\",type:\"email\",name:\"email-address\",id:\"email-address\",onChange:onEmailChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mv3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"db fw6 lh-copy f6\",for:\"password\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{required:true,className:\"pa2 input-reset ba bg-transparent\",type:\"password\",name:\"password\",id:\"password\",onChange:onPasswordChange})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"\",children:/*#__PURE__*/_jsx(\"input\",{// when submit Register it will change the state from signin to mealplanner so that user can access the mealplanner\nonClick:function onClick(e){return onSubmitRegister(e);},className:\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\",type:\"submit\",value:\"Register\",style:{color:\" #2a9d8f\"}})}),/*#__PURE__*/_jsx(\"div\",{className:\"lh-copy mt3\",children:/*#__PURE__*/_jsx(\"p\",{// when submit Signin it will change to register to show the registerForm\nonClick:function onClick(){return onRouteChange(\"signin\");},className:\"f6 link dim black db pointer\",children:\"Signin\"})})]})})});};export default RegisterForm;","map":{"version":3,"sources":["/Users/lorennav/Documents/Diana/Web Apps Diana/Deliss/src/components/RegisterForm.js"],"names":["React","useState","RegisterForm","onRouteChange","updateLoadUser","email","addEmail","name","addName","password","addPassword","onEmailChange","event","target","value","onNameChange","onPasswordChange","onSubmitRegister","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","user","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nconst RegisterForm = ({ onRouteChange, updateLoadUser }) => {\n  const [email, addEmail] = useState(\"\");\n  const [name, addName] = useState(\"\");\n  const [password, addPassword] = useState(\"\");\n\n  //to change the state to what the user writes in the signin form\n  const onEmailChange = (event) => {\n    addEmail(event.target.value);\n  };\n\n  const onNameChange = (event) => {\n    addName(event.target.value);\n  };\n\n  const onPasswordChange = (event) => {\n    addPassword(event.target.value);\n  };\n\n  //when the user submit is going to post the info and then if we guet a response\n  const onSubmitRegister = (e) => {\n    e.preventDefault(); //prevent the default submit event. Don't forget to put also on e param on the onSubmitSignIn - SigninForm\n    fetch(\"https://guarded-peak-18752.herokuapp.com/register\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        name: name,\n        email: email,\n        password: password,\n      }),\n    })\n      .then((response) => response.json())\n      .then((user) => {\n        //in our server, the register post resturn the last user, so the response is going to be the user details\n        if (user) {\n          updateLoadUser(user); //is to update the user profile\n          onRouteChange(\"signin\");\n        }\n      });\n  };\n\n  return (\n    <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw5 shadow-5 center \">\n      <main className=\"pa4\">\n        <form className=\"measure\">\n          <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n            <legend className=\"f4 fw6 ph0 mh0\" style={{ color: \" #2a9d8f\" }}>\n              Register\n            </legend>\n            <div className=\"mt3\">\n              <label className=\"db fw6 lh-copy f6\" for=\"name\">\n                Name\n              </label>\n              <input\n                required=\"required\"\n                className=\"pa2 input-reset ba bg-transparent\"\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n                onChange={onNameChange}\n              />\n            </div>\n            <div className=\"mt3\">\n              <label className=\"db fw6 lh-copy f6\" for=\"email-address\">\n                Email\n              </label>\n              <input\n                required\n                className=\"pa2 input-reset ba bg-transparent\"\n                type=\"email\"\n                name=\"email-address\"\n                id=\"email-address\"\n                onChange={onEmailChange}\n              />\n            </div>\n            <div className=\"mv3\">\n              <label className=\"db fw6 lh-copy f6\" for=\"password\">\n                Password\n              </label>\n              <input\n                required\n                className=\"pa2 input-reset ba bg-transparent\"\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                onChange={onPasswordChange}\n              />\n            </div>\n          </fieldset>\n          <div className=\"\">\n            <input // when submit Register it will change the state from signin to mealplanner so that user can access the mealplanner\n              onClick={(e) => onSubmitRegister(e)}\n              className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n              type=\"submit\"\n              value=\"Register\"\n              style={{ color: \" #2a9d8f\" }}\n            />\n          </div>\n          <div className=\"lh-copy mt3\">\n            <p // when submit Signin it will change to register to show the registerForm\n              onClick={() => onRouteChange(\"signin\")}\n              className=\"f6 link dim black db pointer\"\n            >\n              Signin\n            </p>\n          </div>\n        </form>\n      </main>\n    </article>\n  );\n};\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}